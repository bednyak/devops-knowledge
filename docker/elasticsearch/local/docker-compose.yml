version: '3.8'
services:
  esmaster:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_STACK_VERSION}
    networks:
      - magento2-network
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";
        until curl -s http://esnode1:9200 | grep -q "cluster_name"; do sleep 30; done;
        echo "Good to go!";
      '

  esnode1:
    depends_on:
      - esmaster
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_STACK_VERSION}
    restart: unless-stopped
    volumes:
      - esnode1-data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTICSEARCH_PORT}:9200
    networks:
      - magento2-network
    environment:
      - node.name=esnode1
      - ELASTIC_PASSWORD=testtest # username: elastic
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Dxpack.security.authc.api_key.enabled=false" # Disable API key authentication
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    depends_on:
      - esnode1
    image: docker.elastic.co/kibana/kibana:${ELASTICSEARCH_STACK_VERSION}
    restart: unless-stopped
    ports:
      - ${KIBANA_PORT}:5601
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - magento2-network
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://esnode1:9200

networks:
  magento2-network:
volumes:
  esnode1-data:
    driver: local
  kibana-data:
    driver: local
